/*
ЛР №3
Проектування однотабличних запитів (is null / is not null, сортування, обчислювані поля, вбудовані функції, вставка, виправлення, видалення)

1. Вивести книги у яких не введена ціна або ціна дорівнює 0
2. Вивести книги у яких введена ціна, але не введений тираж
3. Вивести книги, про дату видання яких нічого не відомо.
4. Вивести книги, з дня видання яких пройшло не більше року.
5. Вивести список книг-новинок, відсортованих за зростанням ціни
6. Вивести список книг з числом сторінок від 300 до 400, відсортованих в зворотному алфавітному порядку назв
7. Вивести список книг з ціною від 20 до 40, відсортованих за спаданням дати
8. Вивести список книг, відсортованих в алфавітному порядку назв і ціною по спадаючій
9. Вивести книги, у яких ціна однієї сторінки < 10 копійок.
10. Вивести значення наступних колонок: число символів в назві, перші 20 символів назви великими літерами
11. Вивести значення наступних колонок: перші 10 і останні 10 символів назви прописними буквами, розділені '...'
12. Вивести значення наступних колонок: назва, дата, день, місяць, рік
13. Вивести значення наступних колонок: назва, дата, дата в форматі 'dd / mm / yyyy'
14. Вивести значення наступних колонок: код, ціна, ціна в грн., ціна в євро, ціна в руб.
15. Вивести значення наступних колонок: код, ціна, ціна в грн. без копійок, ціна без копійок округлена
16. Додати інформацію про нову книгу (всі колонки)
17. Додати інформацію про нову книгу (колонки обов'язкові для введення)
18. Видалити книги, видані до 1990 року
19. Проставити поточну дату для тих книг, у яких дата видання відсутня
20. Установити ознаку новинка для книг виданих після 2005 року
*/

#1. Вивести книги у яких не введена ціна або ціна дорівнює 0
SELECT * FROM `book` WHERE `price` IS NULL OR `price` = 0;

#2. Вивести книги у яких введена ціна, але не введений тираж
SELECT * FROM `book` WHERE `price` IS NOT NULL AND `circulation` IS NULL;

#3. Вивести книги, про дату видання яких нічого не відомо.
SELECT * FROM `book` WHERE `date` IS NULL;

#4. Вивести книги, з дня видання яких пройшло не більше року.
SELECT * FROM `book` WHERE (`date` + INTERVAL 1 YEAR) > NOW();

#5. Вивести список книг-новинок, відсортованих за зростанням ціни
SELECT * FROM `book` WHERE `novelty` = 'Yes' ORDER BY `price` ASC;

#6. Вивести список книг з числом сторінок від 300 до 400, відсортованих в зворотному алфавітному порядку назв
SELECT * FROM `book` WHERE `pages` BETWEEN 300 AND 400 ORDER BY `title` DESC;

#7. Вивести список книг з ціною від 20 до 40, відсортованих за спаданням дати
SELECT * FROM `book` WHERE `price` BETWEEN 20 AND 40 ORDER BY `date` DESC;

#8. Вивести список книг, відсортованих в алфавітному порядку назв і ціною по спадаючій
SELECT * FROM `book` ORDER BY `title` ASC, `price` DESC;

#9. Вивести книги, у яких ціна однієї сторінки < 10 копійок.
SELECT *, `price`/`pages` AS `price_per_page`  FROM `book` WHERE (`price`/`pages`) < 10;

#10. Вивести значення наступних колонок: число символів в назві, перші 20 символів назви великими літерами
SELECT LENGTH(`title`) as `len_name`, UPPER(LEFT(`title`, 20)) AS `left_20_name` FROM `book`;

#11. Вивести значення наступних колонок: перші 10 і останні 10 символів назви прописними буквами, розділені '...'
SELECT CONCAT(LOWER(LEFT(`title`, 10)), '...', LOWER(RIGHT(`title`, 10))) AS `form_name` FROM `book`;

#12. Вивести значення наступних колонок: назва, дата, день, місяць, рік
SELECT `title`, `date`, DAY(`date`) AS `day`, MONTH(`date`) AS month, YEAR(`date`) AS `year` FROM `book`;

#13. Вивести значення наступних колонок: назва, дата, дата в форматі 'dd / mm / yyyy'
SELECT `title`, `date`, DATE_FORMAT(`date`,'%d/%m/%Y') AS `form_date` FROM `book`;

#14. Вивести значення наступних колонок: код, ціна, ціна в грн., ціна в євро, ціна в руб.
SELECT `code`, `price`, (`price`*36.41) AS `uah`, (`price` *0.93) AS `eur`, (`price` * 16) AS `unknown_currency` FROM `book`;

#15. Вивести значення наступних колонок: код, ціна, ціна в грн. без копійок, ціна без копійок округлена
SELECT `code`, `price`, TRUNCATE(`price`*36.41, 0) AS `uah_without_penny`, ROUND(`price`*36.41) AS `ua_round_penny` FROM `book`;

#16. Додати інформацію про нову книгу (всі колонки)
INSERT INTO `book`(`code`, `novelty`, `title`, `price`, `publisher`, `pages`, `formar`, `date`, `circulation`, `topic`, `category`)
VALUES
(1110, 'No', 'Чиста архітектура', 18.95, 'ФАБУЛА', 416, '135х235/20', '2019-07-24',5000, 'Архітектури програмного забезпечення', 'Інші книги');

#17. Додати інформацію про нову книгу (колонки обов'язкові для введення)
INSERT INTO `book`(`code`, `novelty`, `title`, `publisher`, `pages`, `formar`, `topic`, `category`)
VALUES
(1111, 'No', 'Чиста архітектура', 'ФАБУЛА', 416, '135х235/20', 'Архітектури програмного забезпечення', 'Інші книги');

#18. Видалити книги, видані до 1990 року
DELETE FROM `book` WHERE YEAR(`date`) < 1990;

#19. Проставити поточну дату для тих книг, у яких дата видання відсутня
UPDATE `book` SET `date` = CURDATE() WHERE `date` IS NULL;

#20. Установити ознаку новинка для книг виданих після 2005 року
UPDATE `book` SET `novelty` = 'Yes' WHERE YEAR(`date`) > 2005;